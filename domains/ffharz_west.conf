{
  -- multiple codes/names can be defined, the first one is the primary name
  -- additional aliases can be defined
  domain_names = {
    ffharz_west = 	'04 West',
    liebenburg = 	'West: Liebenburg',
    lutter = 		'West: Lutter a.B.',
    seesen = 		'West: Seesen',
    badgrund = 		'West: Bad Grund',
    langelsheim = 	'West: Langelsheim',
    goslar = 		'West: Goslar',
    badharzburg = 	'West: Bad Harzburg',
    clausthal = 	'West: Clausthal-Zellerfeld',
    braunlage = 	'West: Braunlage',
    herzberg = 		'West: Herzberg',
    badlauterberg = 	'West: Bad Lauterberg',
    badsachsa = 	'West: Bad Sachsa',
    osterrode = 	'West: Osterrode',
    walkenried = 	'West: Walkenried',
    hattdorf = 		'West: Hattdorf',
    herzberg = 		'West: Herzberg',
  },
  -- 32 byte random data in hexadecimal encoding
  -- This data must be unique among all sites and domains!
  -- Can be generated using: echo $(hexdump -v -n 32 -e '1/1 "%02x"' </dev/urandom)
  domain_seed = 'ae95726c929b513803c5abb8fdbefdb43ce1d1833cae0370d849b0b97e22d572',

  -- unique network prefixes per domain
  prefix4 = '10.4.0.0/16',
  prefix6 = 'fd0e:8db3:d50a::/64',

  next_node = {
    ip4 = '10.4.0.9',
    ip6 = 'fd0e:8db3:d50a::9',
  },

	wifi24 = {
		channel = 6,
		ap = {
	                ssid = 'west.harz.freifunk.net',
		},
		mesh = {
			id = '04.mesh.ffharz',
		},
	},
	wifi5 = {
		channel = 40,
		outdoor_chanlist = "100-140",
		ap = {
			ssid = 'west.harz.freifunk.net',
		},
                mesh = {
                       id = '04.mesh.ffharz',
		},
	},
  
mesh = {
		vxlan = false,
		-- Options specific to the batman-adv routing protocol (optional)
		batman_adv = {
			-- Gateway selection class (optional)
			-- The default class 20 is based on the link quality (TQ) only,
			-- class 1 is calculated from both the TQ and the announced bandwidth
 			gw_sel_class = 1,
			-- FFHarz rennt mit BATMAN_IV - BATMAN_V und BATMAN_IV sind inkompatibel - https://www.open-mesh.org/projects/batman-adv/wiki/BATMAN_V
 			routing_algo = 'BATMAN_IV'
    },
  },

  mesh_vpn = {
		fastd = {
	         groups = {
		  backbone = {
			limit = 1,
		   peers = {
                                        VGW04_1 = {
                                                key = '53ef28b49dca4c93f6fcb17063e8d33c51bbaab848e7845c859246409cc5968b',
                                                remotes = {
                                                        '"1.4.gw.harz.freifunk.net" port 10401',
                                                        },
                                        },
                                        VGW04_2 = {
                                                key = '3d6609c9c29b2c44d9f5254acfc1e4d6947218d2f619f73869dad51098cdeb55',
                                                remotes = {
                                                        '"2.4.gw.harz.freifunk.net" port 10402',
                                                },

                                        },
					VGW04_3 = {
                                                key = '87afcad0d977ce94b99ecfce950298f421f6ed8f043f45f33e8e330712328f64',
                                                remotes = {
                                                        '"3.4.gw.harz.freifunk.net" port 10403',
                                                },

                                        },
					VGW04_4 = {
                                                key = 'd93fc1253546419d9d206b8e3ec9e9613e76cc4485714207810f3cf0c7b5c3e0',
                                                remotes = {
                                                        '"4.4.gw.harz.freifunk.net" port 10404',
                                                },

                                        },
					VGW04_5 = {
                                                key = 'fc62470ec1f1ba5e7fe09872d038bc68025b9e66dbe7a0d58b395687855dae10',
                                                remotes = {
                                                        '"5.4.gw.harz.freifunk.net" port 10405',
                                                },

                                        },
					VGW04_6 = {
                                                key = '3c57e1666e56a0ed9f5f58cdb0d968421eab194a9e8f2555449c59f0a2cf5cec',
                                                remotes = {
                                                        '"6.4.gw.harz.freifunk.net" port 10406',
                                                },

                                        },
					VGW04_7 = {
                                                key = 'de3689139df3825957e7dbe4131a9b4239cdcc1bcca50195bf435878f54beb87',
                                                remotes = {
                                                        '"7.4.gw.harz.freifunk.net" port 10407',
                                                },

                                        },
					VGW04_8 = {
                                                key = '038afb45b93c24e2e144062f1dabd7793325c9c03ae8be9337dd6e648cae6d12',
                                                remotes = {
                                                        '"8.4.gw.harz.freifunk.net" port 10408',
                                                },

                                        },

        },
                                                },
                                },
                        },
        },

ssid_changer = {
		enabled = true,
		switch_timeframe = 30,    -- only once every timeframe (in minutes) the SSID will change to the Offline-SSID 
                        	    -- set to 1440 to change once a day
			            -- set to 1 minute to change every time the router gets offline
		first = 5,                -- the first few minutes directly after reboot within which an Offline-SSID always may be activated (must be <= switch_timeframe)
  		prefix = 'FF_Offline_',   -- use something short to leave space for the nodename (no '~' allowed!)
  		suffix = 'nodename',      -- generate the SSID with either 'nodename', 'mac' or to use only the prefix: 'none'
  
  		tq_limit_enabled = false, -- if false, the offline SSID will only be set if there is no gateway reacheable
                            -- upper and lower limit to turn the offline_ssid on and off
                            -- in-between these two values the SSID will never be changed to prevent it from toggeling every minute.
  		tq_limit_max = 45,        -- upper limit, above that the online SSID will be used
  		tq_limit_min = 35         -- lower limit, below that the offline SSID will be used
	},
}
